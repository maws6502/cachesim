/* EE318 Assignment 2
 * Aditya Goturu <aditya18203@mechyd.ac.in>
 * 18XJ1A0203
 * Moriya Prateek Velagaleti <prateek18224@mechyd.ac.in>
 * 18XJ1A0224
 */
#ifndef _STDINT_H
#include <stdint.h>
#endif
#ifndef _INTTYPES_H
#include <inttypes.h>
#endif

#ifndef _CSIM_H
#define _CSIM_H 1

#define MAX_TRACE_LINE_LEN 40 /* seems familiar */

#define LIKE_70_OR_SOMETHING 69 /* truly random, generated by tossing 100 sided die */

enum ReplacementPolicy {
    RP_START,
    RP_LRU,
    RP_CLK,
    RP_RND,
};

struct cache_line {
    uint64_t tag;
    int valid;
};

typedef struct cache_line CacheLine;

struct cache_index {
    CacheLine *slots;
    uint64_t *uc;
};
typedef struct cache_index CacheIndex;

struct trace {
        uint64_t addr;     /* assuming all the trace files are 64 bit addresses at max */
        struct trace *next;     /* linked list, seemed appropriate somehow */
};
typedef struct trace Trace;

struct facache_entry {
    uint64_t tag;
    struct facache_entry *next;
    struct facache_entry *prev;
};
typedef struct facache_entry FACacheNode;

struct sim_res {
    unsigned long accesses;
    unsigned long hits;
    unsigned long cold_misses;
    unsigned long conflict_misses;
    unsigned long capacity_misses;
    unsigned long cache_size;
    unsigned long block_size;
    unsigned long associativity;
    int replacement_policy;
};

struct sim_res      csim        (Trace *,       uint64_t,      uint64_t,      uint64_t,      int     );

#endif